/*
 * interface_methods.c
 *
 *  Created on: Dec. 20, 2021
 *      Author: Liam Droog
 */

#include "interface_methods.h"

uint16_t hi2c1_read_register(uint8_t address_pointer, uint8_t register_pointer)
{
    HAL_StatusTypeDef status = HAL_OK;
    uint16_t return_value = 0;

    status = HAL_I2C_Mem_Read(&hi2c1, address_pointer, (uint16_t)register_pointer, I2C_MEMADD_SIZE_8BIT, &return_value, 2, 100);

    /* Check the communication status */
    if(status != HAL_OK)
    {
//    	printf("I2C read from 0x%x failed...\r\n", register_pointer );
    }

    return return_value;
}

void hi2c1_write_register(uint8_t address_pointer,uint8_t register_pointer, uint16_t register_value)
{
    HAL_StatusTypeDef status = HAL_OK;

    status = HAL_I2C_Mem_Write(&hi2c1, address_pointer, (uint16_t)register_pointer, I2C_MEMADD_SIZE_8BIT, (uint8_t*)(&register_value), 2, 100);

    /* Check the communication status */
    if(status != HAL_OK)
    {
        // Error handling, for example re-initialization of the I2C peripheral
    	printf("I2C write to 0x%x failed...\r\n", register_pointer );
    }
}
